Регистрация, аутентификация, авторизация (medium)
Необходимо написать сервер, предоставляющий API для регистрации и аутентификации пользователей. Авторизация пользователей должна производиться при помощи авторизационого Middleware. Авторизованный запрос должен позволять изменять данные пользователя. Запрос без авторизации должен позволять получать список пользователей. Что нужно сделать:
-	Разработать API для регистрации пользователей (first name, last name, email, password)
-	Пароль хранить в отдельной таблице в виде hash-суммы
-	Разработать API для аутентификации (login)
-	При аутентификации выдавать Access-токен и Refresh-токен
-	Хранить Refresh-токены в базе (один пользователь может иметь много RT)
-	Разработать API для обновления истекшего Access-токена (и всю сопутствующую логику)
-	Разработать API для получения списка пользователей (не требует авторизации при помощи Access-токена)
-	Разработать Middleware для авторизации входящих запросов (Access-токен должен доставаться из Authorization-заголовка  HTTP-запроса)
-	Разработать API для изменения данных пользователя, требующий авторизацию (пользователь должен иметь возможность изменять только свои собственные данные)
-	Использовать Redis для кэширования данных, реализовать логику по инвалидации кеша (кешировать список пользователей, очищать кэш при добавлении пользователя либо при изменении пользователем своих данных)
-	Разработать API для удаления пользователя (с авторизацией - пользователь может удалить только свой собственный аккаунт)
-	Переменные окружения должны браться из .env-файла, лежащего на диске
-	Написать тесты для контроллеров
-	Написать документацию к серверу (как разворачивать, как собирать, как запускать, какие Environment Variables необходимы)
-	Обернуть в Docker-контейнер
 Технологии:
-	ASP.NET
-	PostgreSQL + ORM, либо RAW запросы
-	JWT (использовать какую-либо JWT-библиотеку для C# / .NET)
-	Redis
-	Argon / Scrypt / Bcrypt
-	Dotenv.net (https://github.com/bolorundurowb/dotenv.net) или аналоги
-	Docker
